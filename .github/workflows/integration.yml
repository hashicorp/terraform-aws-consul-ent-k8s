# Copyright Â© 2014-2022 HashiCorp, Inc.
#
# This Source Code is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this project, you can obtain one at http://mozilla.org/MPL/2.0/.
#

name: Integration tests
concurrency: integration_tests

on:
  pull_request:
    paths-ignore:
      - '**/README.md'
      - '**/CHANGELOG.md'
  repository_dispatch:
    types: [ok-to-test-command]

jobs:
  # Branch-based pull request
  integration-trusted:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_PERMISSIONS_BOUNDARY: ${{ secrets.AWS_PERMISSIONS_BOUNDARY }}
      TEST_CONSUL_ENT_LICENSE: ${{ secrets.TEST_CONSUL_ENT_LICENSE }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      # Drop registry_terraform_io env var when switching to tf v1.2+
      TF_TOKEN_registry_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    steps:
    - name: Branch based PR checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 7200
        role-session-name: githubactionsuser
    - id: integration-test
      uses: ./.github/actions/integration_tests
      with:
        env_suffix: ${{ github.event.pull_request.number }}

  # Repo owner has commented /ok-to-test on a (fork-based) pull request
  integration-fork:
    runs-on: ubuntu-latest
    if:
      github.event_name == 'repository_dispatch' &&
      github.event.client_payload.slash_command.sha != '' &&
      contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.sha)
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_PERMISSIONS_BOUNDARY: ${{ secrets.AWS_PERMISSIONS_BOUNDARY }}
      TEST_CONSUL_ENT_LICENSE: ${{ secrets.TEST_CONSUL_ENT_LICENSE }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
      # Drop registry_terraform_io env var when switching to tf v1.2+
      TF_TOKEN_registry_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    steps:
    # Check out merge commit
    - name: Fork based /ok-to-test checkout
      uses: actions/checkout@v2
      with:
        ref: 'refs/pull/${{ github.event.client_payload.pull_request.number }}/merge'
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 7200
        role-session-name: githubactionsuser
    - id: integration-test
      uses: ./.github/actions/integration_tests
      with:
        env_suffix: ${{ github.event.client_payload.pull_request.number }}

    # Update check run called "integration-fork"
    - uses: actions/github-script@v1
      id: update-check-run
      if: ${{ always() }}
      env:
        number: ${{ github.event.client_payload.pull_request.number }}
        job: ${{ github.job }}
        # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
        conclusion: ${{ job.status }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pull } = await github.pulls.get({
            ...context.repo,
            pull_number: process.env.number
          });
          const ref = pull.head.sha;

          const { data: checks } = await github.checks.listForRef({
            ...context.repo,
            ref
          });

          const check = checks.check_runs.filter(c => c.name === process.env.job);

          const { data: result } = await github.checks.update({
            ...context.repo,
            check_run_id: check[0].id,
            status: 'completed',
            conclusion: process.env.conclusion
          });

          return result;
